version: '3.3'
services:
  # rust:
  #   image: rust:alpine
  #   tty: true
  #   working_dir: /cosmwasm-examples
  #   volumes:
  #     - ./cosmwasm-examples:/cosmwasm-examples
  #     - ./registry_cache:/usr/local/cargo/registry
  #   # apk add libc-dev, rustup default stable, rustup target add wasm32-unknown-unknown --toolchain stable
  #   # RUSTFLAGS='-C link-arg=-s' cargo wasm

  # wasmd:
  #   image: cosmwasm/wasmd
  #   tty: true
  #   working_dir: /wasmd
  #   volumes:
  #     - ./wasmd:/wasmd
  #     - ./cosmwasm-examples:/cosmwasm-examples
  #   # /opt/setup_wasmd.sh, /opt/run_wasmd.sh
  #   command: tail -f /dev/null
  #   ports:
  #     - 26657:26657
  #   environment:
  #     - HOME=/wasmd

  # golang:
  #   image: orai/godev
  #   working_dir: /workspace
  #   tty: true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./dockersdk/:/workspace

  # monitor:
  #   image: orai/monitor
  #   working_dir: /workspace
  #   tty: true
  #   # apk add build-base && pip install cffi pipenv
  #   volumes:
  #     - ../panic_cosmos:/workspace

  orai:
    image: orai/orai:alpine
    working_dir: /workspace
    tty: true
    ports:
      - 1317:1317
      - 40000:40000
    security_opt:
      - 'seccomp:unconfined'
    cap_add:
      - SYS_PTRACE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workspace
      - ./fn.sh:/usr/local/bin/fn

  orai_2:
    image: orai/orai:alpine-prod
    working_dir: /workspace
    tty: true
    ports:
      - 1317:1317
    cap_add:
      - SYS_PTRACE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workspace

  orai_3:
    image: orai/orai
    working_dir: /workspace
    tty: true
    ports:
      - 1317:1317
      - 40000:40000
    security_opt:
      - 'seccomp:unconfined'
    cap_add:
      - SYS_PTRACE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workspace
      - ./fn.sh:/usr/local/bin/fn